<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

header("Access-Control-Allow-Origin: *");
header("Content-Type: application/json; charset=UTF-8");
header("Access-Control-Allow-Methods: POST");
header("Access-Control-Max-Age: 3600");
header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

include_once '../Config/database.php';
include_once '../Config/config.php';
include_once '../Objects/Service.php';

$database = new Database(); //Declaring object for database class

$data = json_decode(file_get_contents("php://input")); //Recieving input data

$db = $database->GetServiceConnection();
$service = new Service($db);


$service->customerId = $data->customerId;
$service->customerProductId = $data->customerProductId;
$service->productId = $data->productId;
$service->addressId = $data->addressId;
$service->serviceCharge = $data->serviceCharge;
$service->otp = $data->otp;
$service->randomNumber = $data->randomNumber;
$service->status = $data->status;
$service->customerTotal = $data->customerTotal;
$service->vendorTotal = $data->vendorTotal;
$service->pickUpDate = $data->pickUpDate;
$service->pickUpSlot = $data->pickUpSlot;
$service->notes = $data->notes;
$service->appliance = urlencode($data->appliance);

if(isset($data->isTurnOn)){
	$service->isTurnOn = $data->isTurnOn;
}else{
	$service->isTurnOn = 0;
}
$service->zoneId = $data->zoneId = 1;
//$service->logisticsId = 7;

$service->createdOn = htmlspecialchars(strip_tags(date('Y/m/d H:i:s', time())));

$url = $apiRootPath.'GetAvailableVendor.php?zoneId='.$service->zoneId.'&productId='.$service->productId.'&date='.$service->pickUpDate;	
$options = array(
    'http' => array(
        'header'  => "Content-type: application/x-www-form-urlencoded\r\n",
        'method'  => 'GET',		        
    ),
);			
$context  = stream_context_create($options);
$result = file_get_contents($url, false, $context);
$availableVendor = json_decode($result);

if($availableVendor->error != "No records found"){
	$service->vendorId = $availableVendor->vendorId;	
}else{
	$service->error = "No available vendor";
	echo json_encode($service); //converting the output data into JSON
	die;
}

$url = $apiRootPath.'GetAvailableLogistics.php?date='.$service->pickUpDate;
$options = array(
'http' => array(
'header'  => "Content-type: application/x-www-form-urlencoded\r\n",
'method'  => 'GET',
),
);
$context  = stream_context_create($options);
$result = file_get_contents($url, false, $context);
$availableLogistics = json_decode($result);

if ($availableLogistics->error != "No records found") {
	$service->logisticsId = $availableLogistics->id;
} else {
	$service->error = "No available logistics";
	echo json_encode($service); //converting the output data into JSON
	die;
}

	
//$service->vendorId = 97;	
//$service->logisticsId = 1;

$result = $service->InsertServiceDetails();

$month=date('m');
$day=date('d');
//$acronym = preg_split("/\s+/", $service->appliance);
 
$words = explode(" ", urldecode($service->appliance));
$acronym = "";
foreach ($words as $w) {
	$acronym .= $w[0];
}

$service->referenceId="OF".$acronym.$day.$month.$service->serviceId;

$service->UpdatereferenceIdByServiceId();

if($result){
		$url = $apiRootPath.'InsertServiceStatus.php';
	
		$data = array("serviceId" => $service->serviceId, "status" => $service->status, "logisticsId" => $service->logisticsId);		
		$options = array(
		    'http' => array(
		        'header'  => "Content-type: application/x-www-form-urlencoded\r\n",
		        'method'  => 'POST',
		        'content' => json_encode($data), 
		    ),
		);			
		$context  = stream_context_create($options);
		$result = file_get_contents($url, false, $context);	
		
		//Firebase Notification
		$url = $apiRootPath.'PassPushNotification.php?type=SRCreated&logisticsId='.$service->logisticsId.'&referenceNumber='.$service->referenceId.'&appliance='.$service->appliance;
		$options = array(
		'http' => array(
		'header'  => "Content-type: application/x-www-form-urlencoded\r\n",
		'method'  => 'GET',
		),
		);
		$context  = stream_context_create($options);
		$result = json_decode(file_get_contents($url, false, $context));	
		
		
				
 		echo json_encode($service); //converting the output data into JSON
}else{
  echo json_encode($service); //converting the output data into JSON
}

?>